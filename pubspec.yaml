name: calendario_familiar
description: "Calendario familiar compartido con sincronización en tiempo real"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.4.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # UI y navegación
  cupertino_icons: ^1.0.5
  table_calendar: ^3.0.9
  go_router: ^14.8.1  # Versión compatible con Dart 3.4.0+

  # Estado y DI
  flutter_riverpod: ^2.3.6
  riverpod_annotation: ^2.1.1

  # Modelos y serialización
  freezed_annotation: ^2.4.4  # Versión requerida por riverpod_generator
  json_annotation: ^4.8.1
  equatable: ^2.0.5
  uuid: ^3.0.7  # Versión requerida por custom_lint_core

  # Firebase - VERSIONES COMPATIBLES
  firebase_core: ^3.15.2
  cloud_firestore: ^5.6.12
  firebase_auth: ^5.7.0
  google_sign_in: ^6.1.5
  firebase_messaging: ^15.2.10  # ACTUALIZADO según sugerencia del error

  # Notificaciones
  flutter_local_notifications: ^15.1.1
  timezone: ^0.9.2

  # Utilidades
  permission_handler: ^10.4.3
  flutter_colorpicker: ^1.0.3
  provider: ^6.0.5
  shared_preferences: ^2.2.1
  path_provider: ^2.1.1
  flutter_launcher_icons: ^0.13.1
  intl: ^0.20.2  # Requerido por flutter_localizations
  
  # PDF y exportación
  pdf: ^3.10.7
  printing: ^5.11.1
  
  # SVG y iconos personalizados
  flutter_svg: ^2.0.10+1


dev_dependencies:
  flutter_test:
    sdk: flutter
  change_app_package_name: ^1.1.0

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

  # Code generation - VERSIONES COMPATIBLES CON DART SDK 3.4.0
  build_runner: ^2.4.7
  freezed: ^2.5.2
  json_serializable: ^6.7.1
  riverpod_generator: ^2.3.9  # BAJADO para compatibilidad con Dart SDK 3.4.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/icons/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

# Configuración de iconos de la aplicación
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/icon/app_icon.png"
  min_sdk_android: 21
  web:
    generate: true
    image_path: "assets/icon/app_icon.png"
    background_color: "#hexcode"
    theme_color: "#hexcode"
  windows:
    generate: true
    image_path: "assets/icon/app_icon.png"
    icon_size: 48
  macos:
    generate: true
    image_path: "assets/icon/app_icon.png"
